TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",")
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
head(x0)
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
head(z0)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
library(TraMineR)
#z$specFlag<-as.factor(z$specFlag)
#
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
i
cll
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
head(x0)
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
head(z0)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
library(TraMineR)
#z$specFlag<-as.factor(z$specFlag)
#
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
dictU[,4]
dictU[,4]
head(dictU)
seqstatl(cc0)
dictU[which(dictU[,4]==seqstatl(cc0)[i]),5]
?read.delim
rm(list = ls())
#funtion to return the positions of a list of values from a R object
getind<-function(vars,object){
for(i in 1:length(object)){
x<-which(object==vars[i])
if(i==1)y<-x else y<-c(y,x)
}
return(y)
}
#reads in the datasets
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
head(x0)
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
head(z0)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
library(TraMineR)
#z$specFlag<-as.factor(z$specFlag)
#
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected PsO treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
Turb<-seqST(cc0[,-c(1,2,3)])
hist(Turb,main="Histogram of sequence turbulence  of PsO patients histories", col="grey")
####
x1<-melt(TxSeq1,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
head(x1)
z1<-cast(x1,patid+specFlag~recorddate,fill=999999)
head(z1)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z1)){
for(c in 3:ncol(z1)){
if(z1[r,c]!=999999)lst<-z1[r,c]
if(z1[r,c]==999999)z1[r,c]<-lst
}}
#
cc1<-seqdef(z1)
cpal(cc1)<-as.character(dictU[getind(seqstatl(cc1),dictU[,4]),5])
seqiplot(cc1[,3:ncol(z1)],withlegend=F,xlab="Time since diagnosis (Days)",title="50 randomly selected PsA treatment sequences",cex.lab=1.4,cex.main=1.4,tlim=sample(1:nrow(cc1),50,replace=F))
Turb<-seqST(cc1[,-c(1,2,3)])
hist(Turb,main="Histogram of sequence turbulence  of PsA patients histories", col="grey")
##
#PsO
clusterward0 <- agnes(dist.om0, diss = TRUE, method = "ward")
plot(clusterward0, main="PsO patients treatment history clustering")
cl1.40 <- cutree(clusterward0, k = 4)
cl1.4fac0 <- factor(cl1.40, labels = paste("Type", 1:4))
#Compute the optimal matching diastance
submat0 <- seqsubm(cc0[,-c(1,2)], method = "TRATE")
dist.om0 <- seqdist(cc0[,-c(1,2)], method = "OM", indel = 1,sm = submat0)
submat1 <- seqsubm(cc1[,-c(1,2)], method = "TRATE")
dist.om1 <- seqdist(cc1[,-c(1,2)], method = "OM", indel = 1,sm = submat1)
library(cluster)##PsA
clusterward1 <- agnes(dist.om1, diss = TRUE, method = "ward")
plot(clusterward1, main="PsA treatment history clustering",cex.main=3)
cl1.4 <- cutree(clusterward1, k = 3)
cl1.4fac <- factor(cl1.4, labels = paste("Type", 1:3))
seqdplot(cc1, group = cl1.4fac, border = NA)
install.packages("rattle")
rattle()
library(rattle)
rattle()
shiny::runApp()
shiny::runApp()
shiny::runApp()
list("Male","Female","Both")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
head(x0)
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
head(z0)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected PsO treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
shiny::runApp()
shiny::runApp()
getind<-function(vars,object){
for(i in 1:length(object)){
x<-which(object==vars[i])
if(i==1)y<-x else y<-c(y,x)
}
return(y)
}
library(TraMineR)
library(reshape)
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected PsO treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
getind<-function(vars,object){
for(i in 1:length(object)){
x<-which(object==vars[i])
if(i==1)y<-x else y<-c(y,x)
}
return(y)
}
library(TraMineR)
library(reshape)
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected PsO treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
getind<-function(vars,object){
for(i in 1:length(object)){
x<-which(object==vars[i])
if(i==1)y<-x else y<-c(y,x)
}
return(y)
}
library(TraMineR)
library(reshape)
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected PsO treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
shiny::runApp()
cll
dictU[,4]
seqstatl(cc0)[i]
which(dictU[,4]==seqstatl(cc0)[i])
dictU[which(dictU[,4]==seqstatl(cc0)[i]),5]
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected PsO treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected PsO treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
rm(list = ls())
#funtion to return the positions of a list of values from a R object
getind<-function(vars,object){
for(i in 1:length(object)){
x<-which(object==vars[i])
if(i==1)y<-x else y<-c(y,x)
}
return(y)
}
library(TraMineR)
library(reshape)
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected PsO treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
shiny::runApp()
dictU
length(seqstatl(cc0))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
dictU
seqstatl(cc0)[i])
seqstatl(cc0)[i]
as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
shiny::runApp()
shiny::runApp()
rm(list = ls())
shiny::runApp()
cc0
rm(list = ls())
#funtion to return the positions of a list of values from a R object
getind<-function(vars,object){
for(i in 1:length(object)){
x<-which(object==vars[i])
if(i==1)y<-x else y<-c(y,x)
}
return(y)
}
library(TraMineR)
library(reshape)
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,title="50 randomly selected treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
fix(cc0)
cc0$patid[1:10]
fix(z0)
rm(list = ls())
#funtion to return the positions of a list of values from a R object
getind<-function(vars,object){
for(i in 1:length(object)){
x<-which(object==vars[i])
if(i==1)y<-x else y<-c(y,x)
}
return(y)
}
library(TraMineR)
library(reshape)
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag"),measured="prodcurrent")
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 3:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
cc0<-seqdef(z0)
class(cc0)
str(cc0)
str(z0)
class(z0)
colnames(tx0)
colnames(TxSeq)
colnames(TxSeq1)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
colnames(TxSeq)
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag","age","gender","region_code"),measured="prodcurrent")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag","age","gender","region_code"),measured="prodcurrent")
colnames(TxSeq)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
colnames(TxSeq)
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1:4]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag","age","gender","region_code"),measured="prodcurrent")
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
colnames(TxSeq)
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),1]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag","age","gender","region_code"),measured="prodcurrent")
colnames(TxSeq)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq<-TxSeq[sample(1:nrow(TxSeq),500),]
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag","age","gender","region_code"),measured="prodcurrent")
z0<-cast(x0,patid+specFlag~recorddate,fill=999999)
head(z0)
z0<-cast(x0,patid+specFlag+age+gender+region_code~recorddate,fill=999999)
head(z0)
lst<-0
for(r in 1:nrow(z0)){
for(c in 6:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,
title="Randomly selected treatment sequences",tlim=sample(1:nrow(cc0),input$sub_sample,replace=F))
seqiplot(cc0[,3:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,
title="Randomly selected treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
cll
as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,6:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,
title="Randomly selected treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
pal
seqstatl
rm(list = ls())
#funtion to return the positions of a list of values from a R object
getind<-function(vars,object){
for(i in 1:length(object)){
x<-which(object==vars[i])
if(i==1)y<-x else y<-c(y,x)
}
return(y)
}
library(TraMineR)
library(reshape)
dictU = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/dictU.csv",sep=",",stringsAsFactors=FALSE)
TxSeq = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
cls<- c("green","red","blue","cyan","yellow4","green3","purple","navajowhite","brown","black","hotpink1","gray87","aquamarine4","magenta","darksalmon","burlywood4",
"darkgoldenrod1","blue4","darkgoldenrod4","blueviolet","aquamarine","aliceblue","chocolate","coral","cornflowerblue","chocolate4","brown1")
TxSeq0<-TxSeq[TxSeq$specFlag==0,]
TxSeq1<-TxSeq[TxSeq$specFlag>0,]
x0<-melt(TxSeq0,id=c("patid","recorddate","specFlag","age","gender","region_code"),measured="prodcurrent")
z0<-cast(x0,patid+specFlag+age+gender+region_code~recorddate,fill=999999)
#have to now fill in the 9999999  witrh whatever there rpevious was
lst<-0
for(r in 1:nrow(z0)){
for(c in 6:ncol(z0)){
if(z0[r,c]!=999999)lst<-z0[r,c]
if(z0[r,c]==999999)z0[r,c]<-lst
}}
write.table(z0, file = "z0.csv", sep = ",", col.names = NA,qmethod = "double")
write.table(z0, file = "/Users/AndyC/Dropbox/rdata/shinyapp2/rdata/z0.csv", sep = ",", col.names = NA,qmethod = "double")
write.table(z0, file = "/Users/AndyC/Dropbox/rdata/shinyapp3/rdata/z0.csv", sep = ",", col.names = NA,qmethod = "double")
rm(z0)
z0 = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp3/rdata/TxSeq.csv",sep=",",stringsAsFactors=FALSE)
z0 = read.delim("/Users/AndyC/Dropbox/rdata/shinyapp3/rdata/z0.csv",sep=",",stringsAsFactors=FALSE)
cc0<-seqdef(z0)
cll<-character(length(seqstatl(cc0)))
for(i in 1:length(seqstatl(cc0)))cll[i]<-as.character(dictU[which(dictU[,4]==seqstatl(cc0)[i]),5])
cpal(cc0)<-as.character(dictU[getind(seqstatl(cc0),dictU[,4]),5])
seqiplot(cc0[,6:ncol(z0)],withlegend=F,xlab="Time since diagnosis (Days)",cex.lab=1.4,cex.main=1.4,
title="Randomly selected treatment sequences",tlim=sample(1:nrow(cc0),50,replace=F))
library(shiny)
install.packages("shiny")
# Define server logic required to draw a histogram
#  2) Its output type is a plot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
